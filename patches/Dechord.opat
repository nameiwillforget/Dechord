
(:patch
 (:name "Dechord")
 (:doc "")
 (:info
  (:created "2020/11/16 8:22:03")
  (:modified "2022/03/30 12:24:07")
  (:by "om-sharp")
  (:version 1.05))
 (:window (:size (1036 860)) (:position (547 176)))
 (:grid nil)
 (:lock nil)
 (:boxes
  (:box
   (:type :object)
   (:reference sound)
   (:group-id nil)
   (:name "csound-simple")
   (:x 268)
   (:y 705)
   (:w 293)
   (:h 92)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :mini-view)
   (:showname nil)
   (:show-markers t)
   (:lock nil)
   (:lambda nil)
   (:reactive nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value :choose-file)
     (:reactive nil))
    (:input
     (:type :key)
     (:name "markers")
     (:value nil)
     (:reactive nil)))
   (:outputs
    (:output (:name "SELF") (:reactive nil))
    (:output (:name "markers") (:reactive nil)))
   (:window (:size (650 200)) (:position (0 0)))
   (:edition-params)
   (:value
    (:object
     (:class sound)
     (:slots
      ((:onset 0)
       (:duration 10499.773)
       (:n-samples 463040)
       (:n-channels 2)
       (:sample-rate 44100)
       (:smpl-type :float)
       (:sample-size 32)))
     (:add-slots
      ((:markers nil)
       (:gain 1.0)
       (:access-from-file nil)
       (:file-pathname
        (:pathname
         (:directory (:relative :up :up "out-files"))
         (:device nil)
         (:host nil)
         (:name "temp_csound_file1451")
         (:type "WAV")))))))
   (:id 0))
  (:box
   (:library "csound")
   (:type :function)
   (:reference csound-synth)
   (:group-id nil)
   (:name "csound-synth")
   (:x 279)
   (:y 629)
   (:w 135)
   (:h 36)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:reactive nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "ORC")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "SCO")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 1))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "value box")
   (:x 329)
   (:y 192)
   (:w 63)
   (:h 36)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:reactive nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 8000)
   (:id 2))
  (:box
   (:library "OM2Csound")
   (:type :function)
   (:reference write-csound-score)
   (:group-id nil)
   (:name "write-csound-score")
   (:x 387)
   (:y 576)
   (:w 178)
   (:h 36)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:reactive nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "OUT")
     (:value no-file)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "DATA")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :optional)
     (:name "more")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 3))
  (:box
   (:type :function)
   (:reference om-random)
   (:group-id nil)
   (:name "om-random")
   (:x 258)
   (:y 261)
   (:w 141)
   (:h 36)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:reactive nil)
   (:inputs
    (:input (:type :standard) (:name "LOW") (:value 0) (:reactive nil))
    (:input
     (:type :standard)
     (:name "HIGH")
     (:value 1)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 4))
  (:box
   (:type :object)
   (:reference textbuffer)
   (:group-id nil)
   (:name nil)
   (:x 400)
   (:y 382)
   (:w 80)
   (:h 40)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :mini-view)
   (:showname nil)
   (:lock :eval-once)
   (:lambda nil)
   (:reactive nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "CONTENTS")
     (:value nil)
     (:reactive nil)))
   (:outputs
    (:output (:name "SELF") (:reactive nil))
    (:output (:name "CONTENTS") (:reactive nil)))
   (:window (:size (497 500)) (:position (38 83)))
   (:edition-params)
   (:value
    (:object
     (:class textbuffer)
     (:slots
      ((:contents
        (:list "400 900" "151.04763" "190.30809" "254.0308"))))
     (:add-slots ((:input-mode :lines-cols)))))
   (:id 5))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "value box")
   (:x 269)
   (:y 192)
   (:w 54)
   (:h 36)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:reactive nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 4200)
   (:id 6))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "value box")
   (:x 576)
   (:y 253)
   (:w 83)
   (:h 37)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:reactive nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list 6/5 3/2))
   (:id 7))
  (:box
   (:type :abstraction)
   (:reference
    (:patch
     (:name "subchords")
     (:doc "")
     (:info
      (:created nil)
      (:modified nil)
      (:by *app-name*)
      (:version 0))
     (:window (:size (598 732)) (:position (832 99)))
     (:grid nil)
     (:lock nil)
     (:boxes
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 1) (:name "in") (:doc "")))
       (:group-id nil)
       (:name "in")
       (:x 250)
       (:y 33)
       (:w 40)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:reactive nil)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 0))
      (:box
       (:type :io)
       (:reference
        (:out (:type omout) (:name "out") (:index 1) (:doc "")))
       (:group-id nil)
       (:name "out")
       (:x 330)
       (:y 624)
       (:w 45)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:reactive nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "out-value")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 1))
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 2) (:name "in") (:doc "")))
       (:group-id nil)
       (:name "in")
       (:x 371)
       (:y 429)
       (:w 40)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:reactive nil)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 2))
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 3) (:name "in") (:doc "")))
       (:group-id nil)
       (:name "in")
       (:x 431)
       (:y 426)
       (:w 40)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:reactive nil)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 3))
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 4) (:name "in") (:doc "")))
       (:group-id nil)
       (:name "in")
       (:x 492)
       (:y 428)
       (:w 40)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:reactive nil)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 4))
      (:box
       (:type :abstraction)
       (:reference
        (:patch-from-file
         (:pathname
          (:directory (:relative :up :up "patches"))
          (:device nil)
          (:host nil)
          (:name "subsets")
          (:type "opat"))))
       (:group-id nil)
       (:name "subsets")
       (:x 203)
       (:y 130)
       (:w 94)
       (:h 36)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:display :hidden)
       (:pre-delay 0)
       (:lock nil)
       (:lambda nil)
       (:reactive nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "in")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 5))
      (:box
       (:type :function)
       (:reference reduce)
       (:group-id nil)
       (:name "reduce")
       (:x 194)
       (:y 207)
       (:w 88)
       (:h 36)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:reactive nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "FUNCTION")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "SEQUENCE")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 6))
      (:box
       (:type :function)
       (:reference append)
       (:group-id nil)
       (:name "append")
       (:x 150)
       (:y 167)
       (:w 92)
       (:h 36)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda :lambda)
       (:reactive nil)
       (:inputs
        (:input
         (:type :optional)
         (:name "lists")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :optional)
         (:name "lists")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 7))
      (:box
       (:type :function)
       (:reference reduce)
       (:group-id nil)
       (:name "reduce")
       (:x 270)
       (:y 433)
       (:w 88)
       (:h 36)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:reactive nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "FUNCTION")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "SEQUENCE")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 8))
      (:box
       (:type :function)
       (:reference append)
       (:group-id nil)
       (:name "append")
       (:x 231)
       (:y 393)
       (:w 92)
       (:h 36)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda :lambda)
       (:reactive nil)
       (:inputs
        (:input
         (:type :optional)
         (:name "lists")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :optional)
         (:name "lists")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 9))
      (:box
       (:type :function)
       (:reference mapcar)
       (:group-id nil)
       (:name "mapcar")
       (:x 138)
       (:y 469)
       (:w 93)
       (:h 36)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:reactive nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "FUNCTION")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "LIST")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :optional)
         (:name "more-lists")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 10))
      (:box
       (:type :abstraction)
       (:reference
        (:patch
         (:name "new-patch")
         (:doc "")
         (:info
          (:created nil)
          (:modified nil)
          (:by *app-name*)
          (:version 0))
         (:window (:size (500 500)) (:position (0 0)))
         (:grid nil)
         (:lock nil)
         (:boxes
          (:box
           (:type :io)
           (:reference
            (:in (:type omin) (:index 1) (:name "in") (:doc "")))
           (:group-id nil)
           (:name "in")
           (:x 101)
           (:y 53)
           (:w 40)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 0.0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:reactive nil)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 0))
          (:box
           (:type :io)
           (:reference
            (:out (:type omout) (:name "out") (:index 1) (:doc "")))
           (:group-id nil)
           (:name "out")
           (:x 211)
           (:y 345)
           (:w 45)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 0.0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:reactive nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "out-value")
             (:value nil)
             (:reactive nil)))
           (:outputs)
           (:id 1))
          (:box
           (:type :io)
           (:reference
            (:in (:type omin) (:index 2) (:name "in") (:doc "")))
           (:group-id nil)
           (:name "in")
           (:x 326)
           (:y 58)
           (:w 40)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 0.0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:reactive nil)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 2))
          (:box
           (:type :function)
           (:reference mapcar)
           (:group-id nil)
           (:name "mapcar")
           (:x 213)
           (:y 225)
           (:w 93)
           (:h 36)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:reactive nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "FUNCTION")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "LIST")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 3))
          (:box
           (:type :abstraction)
           (:reference
            (:patch
             (:name "new-patch")
             (:doc "")
             (:info
              (:created nil)
              (:modified nil)
              (:by *app-name*)
              (:version 0))
             (:window (:size (500 500)) (:position (0 0)))
             (:grid nil)
             (:lock nil)
             (:boxes
              (:box
               (:type :io)
               (:reference
                (:in (:type omin) (:index 1) (:name "in") (:doc "")))
               (:group-id nil)
               (:name "in")
               (:x 130)
               (:y 42)
               (:w 40)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0 1.0 1.0 0.0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:reactive nil)
               (:inputs)
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 0))
              (:box
               (:type :io)
               (:reference
                (:out
                 (:type omout)
                 (:name "out")
                 (:index 1)
                 (:doc "")))
               (:group-id nil)
               (:name "out")
               (:x 224)
               (:y 335)
               (:w 45)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0 1.0 1.0 0.0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:reactive nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "out-value")
                 (:value nil)
                 (:reactive nil)))
               (:outputs)
               (:id 1))
              (:box
               (:type :io)
               (:reference
                (:in (:type omin) (:index 2) (:name "in") (:doc "")))
               (:group-id nil)
               (:name "in")
               (:x 333)
               (:y 49)
               (:w 40)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0 1.0 1.0 0.0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:reactive nil)
               (:inputs)
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 2)))
             (:connections
              (:connection
               (:from (:box 0 :out 0))
               (:to (:box 1 :in 0))))))
           (:group-id nil)
           (:name "new-patch")
           (:x 153)
           (:y 164)
           (:w 114)
           (:h 28)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:display :hidden)
           (:pre-delay 0)
           (:lock nil)
           (:lambda :lambda)
           (:reactive nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "in")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "in")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 4)))
         (:connections
          (:connection (:from (:box 0 :out 0)) (:to (:box 4 :in 0)))
          (:connection (:from (:box 2 :out 0)) (:to (:box 3 :in 1)))
          (:connection (:from (:box 3 :out 0)) (:to (:box 1 :in 0)))
          (:connection (:from (:box 4 :out 0)) (:to (:box 3 :in 0))))))
       (:group-id nil)
       (:name "new-patch")
       (:x 64)
       (:y 432)
       (:w 114)
       (:h 28)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:display :hidden)
       (:pre-delay 0)
       (:lock nil)
       (:lambda :lambda)
       (:reactive nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "in")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "in")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 11))
      (:box
       (:type :abstraction)
       (:reference
        (:patch-from-file
         (:pathname
          (:directory (:relative :up :up "patches"))
          (:device nil)
          (:host nil)
          (:name "listord")
          (:type "opat"))))
       (:group-id nil)
       (:name "listord")
       (:x 138)
       (:y 393)
       (:w 83)
       (:h 36)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:display :hidden)
       (:pre-delay 0)
       (:lock nil)
       (:lambda nil)
       (:reactive nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "in")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 12))
      (:box
       (:type :function)
       (:reference reduce)
       (:group-id nil)
       (:name "reduce")
       (:x 76)
       (:y 508)
       (:w 88)
       (:h 36)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:reactive nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "FUNCTION")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "SEQUENCE")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 13))
      (:box
       (:type :function)
       (:reference append)
       (:group-id nil)
       (:name "append")
       (:x 37)
       (:y 468)
       (:w 92)
       (:h 36)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda :lambda)
       (:reactive nil)
       (:inputs
        (:input
         (:type :optional)
         (:name "lists")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :optional)
         (:name "lists")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 14))
      (:box
       (:type :function)
       (:reference mapcar)
       (:group-id nil)
       (:name "mapcar")
       (:x 310)
       (:y 557)
       (:w 93)
       (:h 36)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:reactive nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "FUNCTION")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "LIST")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :optional)
         (:name "more-lists")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 15))
      (:box
       (:type :abstraction)
       (:reference
        (:patch
         (:name "instr0")
         (:doc "")
         (:info
          (:created nil)
          (:modified nil)
          (:by *app-name*)
          (:version 0))
         (:window (:size (500 355)) (:position (95 140)))
         (:grid nil)
         (:lock nil)
         (:boxes
          (:box
           (:type :io)
           (:reference
            (:in (:type omin) (:index 1) (:name "in") (:doc "")))
           (:group-id nil)
           (:name "in")
           (:x 56)
           (:y 43)
           (:w 40)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 0.0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:reactive nil)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 0))
          (:box
           (:type :io)
           (:reference
            (:out (:type omout) (:name "out") (:index 1) (:doc "")))
           (:group-id nil)
           (:name "out")
           (:x 203)
           (:y 254)
           (:w 45)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 0.0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:reactive nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "out-value")
             (:value nil)
             (:reactive nil)))
           (:outputs)
           (:id 1))
          (:box
           (:type :io)
           (:reference
            (:in (:type omin) (:index 2) (:name "in") (:doc "")))
           (:group-id nil)
           (:name "in")
           (:x 134)
           (:y 42)
           (:w 40)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 0.0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:reactive nil)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 2))
          (:box
           (:type :io)
           (:reference
            (:in (:type omin) (:index 3) (:name "in") (:doc "")))
           (:group-id nil)
           (:name "in")
           (:x 219)
           (:y 42)
           (:w 40)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 0.0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:reactive nil)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 3))
          (:box
           (:type :io)
           (:reference
            (:in (:type omin) (:index 4) (:name "in") (:doc "")))
           (:group-id nil)
           (:name "in")
           (:x 307)
           (:y 47)
           (:w 40)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 0.0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:reactive nil)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 4))
          (:box
           (:type :io)
           (:reference
            (:in (:type omin) (:index 5) (:name "in") (:doc "")))
           (:group-id nil)
           (:name "in")
           (:x 379)
           (:y 45)
           (:w 40)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 0.0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:reactive nil)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 5))
          (:box
           (:library "OM2Csound")
           (:type :function)
           (:reference instrument0)
           (:group-id nil)
           (:name "instrument0")
           (:x 167)
           (:y 197)
           (:w 125)
           (:h 36)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:reactive nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "INSTR")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "ONSETS")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "DURS")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "params")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "params")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 6))
          (:box
           (:type :function)
           (:reference om*)
           (:group-id nil)
           (:name "om*")
           (:x 152)
           (:y 120)
           (:w 68)
           (:h 36)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:reactive nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "ARG1")
             (:value 0)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "ARG2")
             (:value 0)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 7)))
         (:connections
          (:connection
           (:from (:box 0 :out 0))
           (:to (:box 6 :in 0))
           (:attributes (:color nil :style nil :modif (0 0.45))))
          (:connection (:from (:box 2 :out 0)) (:to (:box 7 :in 0)))
          (:connection (:from (:box 3 :out 0)) (:to (:box 7 :in 1)))
          (:connection (:from (:box 3 :out 0)) (:to (:box 6 :in 2)))
          (:connection (:from (:box 4 :out 0)) (:to (:box 6 :in 3)))
          (:connection (:from (:box 5 :out 0)) (:to (:box 6 :in 4)))
          (:connection (:from (:box 6 :out 0)) (:to (:box 1 :in 0)))
          (:connection (:from (:box 7 :out 0)) (:to (:box 6 :in 1))))))
       (:group-id nil)
       (:name "instr0")
       (:x 254)
       (:y 507)
       (:w 114)
       (:h 28)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:display :hidden)
       (:pre-delay 0)
       (:lock nil)
       (:lambda :lambda)
       (:reactive nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "in")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "in")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "in")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "in")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "in")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 16))
      (:box
       (:type :abstraction)
       (:reference
        (:patch-from-file
         (:pathname
          (:directory (:relative :up :up "patches"))
          (:device nil)
          (:host nil)
          (:name "reverse")
          (:type "opat"))))
       (:group-id nil)
       (:name "reverse")
       (:x 187)
       (:y 258)
       (:w 93)
       (:h 36)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:display :hidden)
       (:pre-delay 0)
       (:lock nil)
       (:lambda nil)
       (:reactive nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "in")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 17))
      (:box
       (:type :function)
       (:reference om-random)
       (:group-id nil)
       (:name "om-random")
       (:x 53)
       (:y 254)
       (:w 123)
       (:h 36)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:reactive nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "LOW")
         (:value 0)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "HIGH")
         (:value 1)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 18))
      (:box
       (:type :special)
       (:reference if)
       (:group-id nil)
       (:name "if")
       (:x 162)
       (:y 338)
       (:w 47)
       (:h 36)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:reactive nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "TEST")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "THEN")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :optional)
         (:name "else")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 19))
      (:box
       (:type :function)
       (:reference om=)
       (:group-id nil)
       (:name "om=")
       (:x 95)
       (:y 299)
       (:w 71)
       (:h 36)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:reactive nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "NUM1")
         (:value 0)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "NUM2")
         (:value 0)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 20))
      (:box
       (:type :abstraction)
       (:reference
        (:patch-from-file
         (:pathname
          (:directory (:relative :up :up "patches"))
          (:device nil)
          (:host nil)
          (:name "deleten")
          (:type "opat"))))
       (:group-id nil)
       (:name "deleten")
       (:x 204)
       (:y 86)
       (:w 92)
       (:h 36)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:display :hidden)
       (:pre-delay 0)
       (:lock nil)
       (:lambda nil)
       (:reactive nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "in")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "in")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 21))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "value box")
       (:x 214)
       (:y 43)
       (:w 32)
       (:h 36)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:reactive nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 0)
       (:id 22)))
     (:connections
      (:connection (:from (:box 0 :out 0)) (:to (:box 21 :in 1)))
      (:connection (:from (:box 2 :out 0)) (:to (:box 16 :in 0)))
      (:connection
       (:from (:box 3 :out 0))
       (:to (:box 16 :in 2))
       (:attributes (:color nil :style nil :modif (0 1/49))))
      (:connection
       (:from (:box 4 :out 0))
       (:to (:box 16 :in 3))
       (:attributes (:color nil :style nil :modif (0 4/47))))
      (:connection (:from (:box 5 :out 0)) (:to (:box 6 :in 1)))
      (:connection (:from (:box 6 :out 0)) (:to (:box 17 :in 0)))
      (:connection
       (:from (:box 6 :out 0))
       (:to (:box 19 :in 1))
       (:attributes (:color nil :style nil :modif (0 -0.3642857))))
      (:connection (:from (:box 7 :out 0)) (:to (:box 6 :in 0)))
      (:connection
       (:from (:box 8 :out 0))
       (:to (:box 15 :in 2))
       (:attributes (:color nil :style nil :modif (0 -4903/14586))))
      (:connection (:from (:box 9 :out 0)) (:to (:box 8 :in 0)))
      (:connection (:from (:box 10 :out 0)) (:to (:box 13 :in 1)))
      (:connection (:from (:box 11 :out 0)) (:to (:box 10 :in 0)))
      (:connection (:from (:box 12 :out 0)) (:to (:box 10 :in 1)))
      (:connection
       (:from (:box 13 :out 0))
       (:to (:box 15 :in 1))
       (:attributes (:color nil :style nil :modif (0 -0.14565213))))
      (:connection (:from (:box 14 :out 0)) (:to (:box 13 :in 0)))
      (:connection (:from (:box 15 :out 0)) (:to (:box 1 :in 0)))
      (:connection (:from (:box 16 :out 0)) (:to (:box 15 :in 0)))
      (:connection
       (:from (:box 17 :out 0))
       (:to (:box 19 :in 2))
       (:attributes (:color nil :style nil :modif (0 0.30925927))))
      (:connection (:from (:box 18 :out 0)) (:to (:box 20 :in 0)))
      (:connection (:from (:box 19 :out 0)) (:to (:box 12 :in 0)))
      (:connection
       (:from (:box 19 :out 0))
       (:to (:box 10 :in 2))
       (:attributes (:color nil :style nil :modif (0 -43/102))))
      (:connection
       (:from (:box 19 :out 0))
       (:to (:box 8 :in 1))
       (:attributes (:color nil :style nil :modif (0 -0.45))))
      (:connection (:from (:box 20 :out 0)) (:to (:box 19 :in 0)))
      (:connection (:from (:box 21 :out 0)) (:to (:box 5 :in 0)))
      (:connection (:from (:box 22 :out 0)) (:to (:box 21 :in 0))))))
   (:group-id nil)
   (:name "subchords")
   (:x 449)
   (:y 430)
   (:w 150)
   (:h 32)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :hidden)
   (:pre-delay 0)
   (:lock nil)
   (:lambda nil)
   (:reactive nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "in")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "in")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "in")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "in")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 8))
  (:box
   (:type :abstraction)
   (:reference
    (:patch
     (:name "choosechord")
     (:doc "")
     (:info
      (:created nil)
      (:modified nil)
      (:by *app-name*)
      (:version 0))
     (:window (:size (593 527)) (:position (1131 168)))
     (:grid nil)
     (:lock nil)
     (:boxes
      (:box
       (:type :io)
       (:reference
        (:out (:type omout) (:name "out") (:index 1) (:doc "")))
       (:group-id nil)
       (:name "out")
       (:x 251)
       (:y 428)
       (:w 45)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:reactive nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "out-value")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 0))
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 1) (:name "in") (:doc "")))
       (:group-id nil)
       (:name "in")
       (:x 73)
       (:y 33)
       (:w 40)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:reactive nil)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 1))
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 2) (:name "in") (:doc "")))
       (:group-id nil)
       (:name "in")
       (:x 179)
       (:y 30)
       (:w 40)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:reactive nil)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 2))
      (:box
       (:type :function)
       (:reference length)
       (:group-id nil)
       (:name "length")
       (:x 157)
       (:y 80)
       (:w 83)
       (:h 36)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:reactive nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SEQUENCE")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 3))
      (:box
       (:type :function)
       (:reference random)
       (:group-id nil)
       (:name "random")
       (:x 152)
       (:y 121)
       (:w 94)
       (:h 36)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock :eval-once)
       (:lambda nil)
       (:reactive nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "ARG")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 4))
      (:box
       (:type :function)
       (:reference nth)
       (:group-id nil)
       (:name "nth")
       (:x 206)
       (:y 160)
       (:w 61)
       (:h 36)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:reactive nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "ORIG-N")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "ORIG-LIST")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 5))
      (:box
       (:type :function)
       (:reference mapcar)
       (:group-id nil)
       (:name "mapcar")
       (:x 96)
       (:y 336)
       (:w 93)
       (:h 36)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:reactive nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "FUNCTION")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "LIST")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 6))
      (:box
       (:type :abstraction)
       (:reference
        (:patch
         (:name "new-patch")
         (:doc "")
         (:info
          (:created nil)
          (:modified nil)
          (:by *app-name*)
          (:version 0))
         (:window (:size (459 490)) (:position (469 45)))
         (:grid nil)
         (:lock nil)
         (:boxes
          (:box
           (:type :io)
           (:reference
            (:in (:type omin) (:index 1) (:name "in") (:doc "")))
           (:group-id nil)
           (:name "in")
           (:x 74)
           (:y 43)
           (:w 40)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 0.0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:reactive nil)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 0))
          (:box
           (:type :io)
           (:reference
            (:out (:type omout) (:name "out") (:index 1) (:doc "")))
           (:group-id nil)
           (:name "out")
           (:x 208)
           (:y 360)
           (:w 45)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 0.0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:reactive nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "out-value")
             (:value nil)
             (:reactive nil)))
           (:outputs)
           (:id 1))
          (:box
           (:type :io)
           (:reference
            (:in (:type omin) (:index 2) (:name "in") (:doc "")))
           (:group-id nil)
           (:name "in")
           (:x 332)
           (:y 54)
           (:w 40)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 0.0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:reactive nil)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 2))
          (:box
           (:type :function)
           (:reference om*)
           (:group-id nil)
           (:name "om*")
           (:x 74)
           (:y 178)
           (:w 68)
           (:h 36)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:reactive nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "ARG1")
             (:value 0)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "ARG2")
             (:value 0)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 3))
          (:box
           (:type :special)
           (:reference if)
           (:group-id nil)
           (:name "if")
           (:x 212)
           (:y 298)
           (:w 47)
           (:h 36)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:reactive nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "TEST")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "THEN")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "else")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 4))
          (:box
           (:type :function)
           (:reference integerp)
           (:group-id nil)
           (:name "integerp")
           (:x 173)
           (:y 242)
           (:w 98)
           (:h 36)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:reactive nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "X")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 5))
          (:box
           (:type :function)
           (:reference om+)
           (:group-id nil)
           (:name "om+")
           (:x 301)
           (:y 145)
           (:w 71)
           (:h 36)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:reactive nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "ARG1")
             (:value 0)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "ARG2")
             (:value 0)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 6))
          (:box
           (:type :function)
           (:reference mc->f)
           (:group-id nil)
           (:name "mc->f")
           (:x 297)
           (:y 181)
           (:w 81)
           (:h 36)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:reactive nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "MIDICS?")
             (:value 6000)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 7))
          (:box
           (:type :function)
           (:reference mc->f)
           (:group-id nil)
           (:name "mc->f")
           (:x 54)
           (:y 120)
           (:w 81)
           (:h 36)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:reactive nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "MIDICS?")
             (:value 6000)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 8)))
         (:connections
          (:connection
           (:from (:box 0 :out 0))
           (:to (:box 6 :in 0))
           (:attributes (:color nil :style nil :modif (0 -0.45))))
          (:connection
           (:from (:box 0 :out 0))
           (:to (:box 8 :in 0))
           (:attributes (:color nil :style nil :modif (0 -0.45))))
          (:connection
           (:from (:box 2 :out 0))
           (:to (:box 5 :in 0))
           (:attributes
            (:color nil :style nil :modif (0 -0.30897442))))
          (:connection (:from (:box 2 :out 0)) (:to (:box 6 :in 1)))
          (:connection
           (:from (:box 2 :out 0))
           (:to (:box 3 :in 1))
           (:attributes (:color nil :style nil :modif (0 1/4))))
          (:connection
           (:from (:box 3 :out 0))
           (:to (:box 4 :in 2))
           (:attributes (:color nil :style nil :modif (0 0.30106384))))
          (:connection (:from (:box 4 :out 0)) (:to (:box 1 :in 0)))
          (:connection (:from (:box 5 :out 0)) (:to (:box 4 :in 0)))
          (:connection (:from (:box 6 :out 0)) (:to (:box 7 :in 0)))
          (:connection
           (:from (:box 7 :out 0))
           (:to (:box 4 :in 1))
           (:attributes (:color nil :style nil :modif (0 0.38406593))))
          (:connection (:from (:box 8 :out 0)) (:to (:box 3 :in 0))))))
       (:group-id nil)
       (:name "new-patch")
       (:x 62)
       (:y 297)
       (:w 114)
       (:h 28)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:display :hidden)
       (:pre-delay 0)
       (:lock nil)
       (:lambda :lambda)
       (:reactive nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "in")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "in")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 7))
      (:box
       (:type :function)
       (:reference append)
       (:group-id nil)
       (:name "append")
       (:x 232)
       (:y 382)
       (:w 92)
       (:h 36)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:reactive nil)
       (:inputs
        (:input
         (:type :optional)
         (:name "lists")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :optional)
         (:name "lists")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 8))
      (:box
       (:type :function)
       (:reference list)
       (:group-id nil)
       (:name "list")
       (:x 225)
       (:y 334)
       (:w 59)
       (:h 36)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:reactive nil)
       (:inputs
        (:input
         (:type :optional)
         (:name "x")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 9))
      (:box
       (:type :function)
       (:reference append)
       (:group-id nil)
       (:name "append")
       (:x 358)
       (:y 242)
       (:w 92)
       (:h 36)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:reactive nil)
       (:inputs
        (:input
         (:type :optional)
         (:name "lists")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :optional)
         (:name "lists")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 10))
      (:box
       (:type :special)
       (:reference if)
       (:group-id nil)
       (:name "if")
       (:x 294)
       (:y 290)
       (:w 47)
       (:h 36)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:reactive nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "TEST")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "THEN")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :optional)
         (:name "else")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 11))
      (:box
       (:type :function)
       (:reference integerp)
       (:group-id nil)
       (:name "integerp")
       (:x 255)
       (:y 243)
       (:w 98)
       (:h 36)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:reactive nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "X")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 12))
      (:box
       (:type :function)
       (:reference first)
       (:group-id nil)
       (:name "first")
       (:x 262)
       (:y 205)
       (:w 66)
       (:h 36)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:reactive nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "LIST")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 13))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "value box")
       (:x 366)
       (:y 166)
       (:w 32)
       (:h 36)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:reactive nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 0)
       (:id 14))
      (:box
       (:type :function)
       (:reference list)
       (:group-id nil)
       (:name "list")
       (:x 352)
       (:y 209)
       (:w 59)
       (:h 36)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:reactive nil)
       (:inputs
        (:input
         (:type :optional)
         (:name "x")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 15))
      (:box
       (:type :function)
       (:reference append)
       (:group-id nil)
       (:name "append")
       (:x 456)
       (:y 241)
       (:w 92)
       (:h 36)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:reactive nil)
       (:inputs
        (:input
         (:type :optional)
         (:name "lists")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :optional)
         (:name "lists")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 16))
      (:box
       (:type :function)
       (:reference list)
       (:group-id nil)
       (:name "list")
       (:x 449)
       (:y 203)
       (:w 59)
       (:h 36)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:reactive nil)
       (:inputs
        (:input
         (:type :optional)
         (:name "x")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 17))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "value box")
       (:x 463)
       (:y 159)
       (:w 32)
       (:h 36)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:reactive nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 1)
       (:id 18)))
     (:connections
      (:connection
       (:from (:box 1 :out 0))
       (:to (:box 7 :in 0))
       (:attributes (:color nil :style nil :modif (0 -0.45))))
      (:connection
       (:from (:box 2 :out 0))
       (:to (:box 5 :in 1))
       (:attributes (:color nil :style nil :modif (0 -0.45))))
      (:connection (:from (:box 2 :out 0)) (:to (:box 3 :in 0)))
      (:connection (:from (:box 3 :out 0)) (:to (:box 4 :in 0)))
      (:connection (:from (:box 4 :out 0)) (:to (:box 5 :in 0)))
      (:connection
       (:from (:box 5 :out 0))
       (:to (:box 9 :in 0))
       (:attributes (:color nil :style nil :modif (0 59/148))))
      (:connection (:from (:box 5 :out 0)) (:to (:box 13 :in 0)))
      (:connection
       (:from (:box 5 :out 0))
       (:to (:box 10 :in 1))
       (:attributes (:color nil :style nil :modif (0 -0.32500005))))
      (:connection
       (:from (:box 5 :out 0))
       (:to (:box 16 :in 1))
       (:attributes (:color nil :style nil :modif (0 -0.32272726))))
      (:connection (:from (:box 6 :out 0)) (:to (:box 8 :in 1)))
      (:connection (:from (:box 7 :out 0)) (:to (:box 6 :in 0)))
      (:connection (:from (:box 8 :out 0)) (:to (:box 0 :in 0)))
      (:connection (:from (:box 9 :out 0)) (:to (:box 8 :in 0)))
      (:connection
       (:from (:box 10 :out 0))
       (:to (:box 11 :in 1))
       (:attributes (:color nil :style nil :modif (0 -15/62))))
      (:connection (:from (:box 11 :out 0)) (:to (:box 6 :in 1)))
      (:connection (:from (:box 12 :out 0)) (:to (:box 11 :in 0)))
      (:connection (:from (:box 13 :out 0)) (:to (:box 12 :in 0)))
      (:connection (:from (:box 14 :out 0)) (:to (:box 15 :in 0)))
      (:connection (:from (:box 15 :out 0)) (:to (:box 10 :in 0)))
      (:connection (:from (:box 16 :out 0)) (:to (:box 11 :in 2)))
      (:connection (:from (:box 17 :out 0)) (:to (:box 16 :in 0)))
      (:connection (:from (:box 18 :out 0)) (:to (:box 17 :in 0))))))
   (:group-id nil)
   (:name "choosechord")
   (:x 384)
   (:y 321)
   (:w 131)
   (:h 28)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :hidden)
   (:pre-delay 0)
   (:lock nil)
   (:lambda nil)
   (:reactive nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "in")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "in")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 9))
  (:box
   (:type :function)
   (:reference list)
   (:group-id nil)
   (:name "list")
   (:x 588)
   (:y 292)
   (:w 59)
   (:h 36)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:reactive nil)
   (:inputs
    (:input
     (:type :optional)
     (:name "x")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 10))
  (:box
   (:type :object)
   (:reference textbuffer)
   (:group-id nil)
   (:name "textfile")
   (:x 300)
   (:y 575)
   (:w 70)
   (:h 40)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :mini-view)
   (:showname nil)
   (:lock :locked)
   (:lambda nil)
   (:reactive nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "CONTENTS")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :key)
     (:name "output-mode")
     (:value :text-list)
     (:reactive nil)))
   (:outputs
    (:output (:name "SELF") (:reactive nil))
    (:output (:name "CONTENTS") (:reactive nil))
    (:output (:name "output-mode") (:reactive nil)))
   (:window (:size (960 998)) (:position (960 45)))
   (:edition-params (:output-mode :text-list))
   (:value
    (:object
     (:class textbuffer)
     (:slots
      ((:contents
        (:list
         "sr = 44100"
         "ksmps = 32"
         "nchnls = 2"
         "0dbfs  = 1"
         ""
         ""
         "instr 1"
         ""
         "asig pluck 0.3, p5, 220, 0, p4, .1, 10"
         "     outs asig, asig"
         ""
         ""
         "endin"
         ""
         ""
         ""
         "instr 2"
         ""
         "aen	linen	0.17, 0.1, p3, 0.1"
         ""
         "asig poscil	aen, p5, p4"
         "     outs asig, asig"
         ""
         ""
         "endin"
         ""
         ""
         ""
         "instr 3"
         ""
         "asig	STKWurley p5, 0.5"
         ""
         "outs asig, asig"
         ""
         "endin"))))
     (:add-slots ((:input-mode :lines-cols)))))
   (:id 11))
  (:box
   (:type :object)
   (:reference textbuffer)
   (:group-id nil)
   (:name nil)
   (:x 421)
   (:y 522)
   (:w 80)
   (:h 40)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :mini-view)
   (:showname nil)
   (:lock :locked)
   (:lambda nil)
   (:reactive nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "CONTENTS")
     (:value nil)
     (:reactive nil)))
   (:outputs
    (:output (:name "SELF") (:reactive nil))
    (:output (:name "CONTENTS") (:reactive nil)))
   (:window (:size (960 998)) (:position (0 45)))
   (:edition-params)
   (:value
    (:object
     (:class textbuffer)
     (:slots
      ((:contents
        (:list
         "f1   0    4096 10 1"
         "f 2  	 0 	 4096	 10	 1    0.5  0.3  0.25 	0.2  0.167     0.14"
         "0.125     .111	 .1	 .09"
         "f3   0    2048 10   1    0    0.3  0    0.2  0         0.14      0         .111      ; Square"
         "f4   0    2048 10   1    1    1    1    0.7  0.5       0.3       0.1                 ; Pulse"))))
     (:add-slots ((:input-mode :lines-cols)))))
   (:id 12))
  (:box
   (:type :value)
   (:reference single-float)
   (:group-id nil)
   (:name "value box")
   (:x 525)
   (:y 392)
   (:w 32)
   (:h 36)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:reactive nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 1.5)
   (:id 13))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "value box")
   (:x 561)
   (:y 392)
   (:w 32)
   (:h 36)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:reactive nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 1)
   (:id 14))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "value box")
   (:x 496)
   (:y 229)
   (:w 32)
   (:h 36)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:reactive nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 2)
   (:id 15))
  (:box
   (:type :abstraction)
   (:reference
    (:patch
     (:name "addinversions")
     (:doc "")
     (:info
      (:created nil)
      (:modified nil)
      (:by *app-name*)
      (:version 0))
     (:window (:size (500 500)) (:position (0 0)))
     (:grid nil)
     (:lock nil)
     (:boxes
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 1) (:name "in") (:doc "")))
       (:group-id nil)
       (:name "in")
       (:x 152)
       (:y 36)
       (:w 40)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:reactive nil)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 0))
      (:box
       (:type :io)
       (:reference
        (:out (:type omout) (:name "out") (:index 1) (:doc "")))
       (:group-id nil)
       (:name "out")
       (:x 209)
       (:y 344)
       (:w 45)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:reactive nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "out-value")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 1))
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 2) (:name "in") (:doc "")))
       (:group-id nil)
       (:name "in")
       (:x 331)
       (:y 34)
       (:w 40)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:reactive nil)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 2))
      (:box
       (:type :abstraction)
       (:reference
        (:patch-from-file
         (:pathname
          (:directory (:relative :up :up "patches"))
          (:device nil)
          (:host nil)
          (:name "ordlist")
          (:type "opat"))))
       (:group-id nil)
       (:name "ordlist")
       (:x 325)
       (:y 113)
       (:w 83)
       (:h 36)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:display :hidden)
       (:pre-delay 0)
       (:lock nil)
       (:lambda nil)
       (:reactive nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "in")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 3))
      (:box
       (:type :function)
       (:reference mapcar)
       (:group-id nil)
       (:name "mapcar")
       (:x 206)
       (:y 214)
       (:w 93)
       (:h 36)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:reactive nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "FUNCTION")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "LIST")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 4))
      (:box
       (:type :abstraction)
       (:reference
        (:patch
         (:name "perinv")
         (:doc "")
         (:info
          (:created nil)
          (:modified nil)
          (:by *app-name*)
          (:version 0))
         (:window (:size (500 500)) (:position (0 0)))
         (:grid nil)
         (:lock nil)
         (:boxes
          (:box
           (:type :io)
           (:reference
            (:in (:type omin) (:index 1) (:name "in") (:doc "")))
           (:group-id nil)
           (:name "in")
           (:x 109)
           (:y 40)
           (:w 40)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 0.0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:reactive nil)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 0))
          (:box
           (:type :io)
           (:reference
            (:out (:type omout) (:name "out") (:index 1) (:doc "")))
           (:group-id nil)
           (:name "out")
           (:x 228)
           (:y 242)
           (:w 45)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 0.0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:reactive nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "out-value")
             (:value nil)
             (:reactive nil)))
           (:outputs)
           (:id 1))
          (:box
           (:type :io)
           (:reference
            (:in (:type omin) (:index 2) (:name "in") (:doc "")))
           (:group-id nil)
           (:name "in")
           (:x 303)
           (:y 41)
           (:w 40)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 0.0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:reactive nil)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 2))
          (:box
           (:type :abstraction)
           (:reference
            (:patch-from-file
             (:pathname
              (:directory (:relative :up :up "patches"))
              (:device nil)
              (:host nil)
              (:name "chordinversion")
              (:type "opat"))))
           (:group-id nil)
           (:name "chordinversion")
           (:x 111)
           (:y 150)
           (:w 145)
           (:h 36)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:display :hidden)
           (:pre-delay 0)
           (:lock nil)
           (:lambda :lambda)
           (:reactive nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "in")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "in")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 3))
          (:box
           (:type :function)
           (:reference mapcar)
           (:group-id nil)
           (:name "mapcar")
           (:x 208)
           (:y 190)
           (:w 93)
           (:h 36)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:reactive nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "FUNCTION")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "LIST")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 4))
          (:box
           (:type :abstraction)
           (:reference
            (:patch-from-file
             (:pathname
              (:directory (:relative :up :up "patches"))
              (:device nil)
              (:host nil)
              (:name "chordinversion")
              (:type "opat"))))
           (:group-id nil)
           (:name "chordinversion")
           (:x 48)
           (:y 317)
           (:w 145)
           (:h 36)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:display :hidden)
           (:pre-delay 0)
           (:lock nil)
           (:lambda nil)
           (:reactive nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "in")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "in")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 5))
          (:box
           (:type :value)
           (:reference fixnum)
           (:group-id nil)
           (:name "value box")
           (:x 134)
           (:y 263)
           (:w 32)
           (:h 36)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:reactive nil)
           (:inputs)
           (:outputs (:output (:name "value") (:reactive nil)))
           (:value 2)
           (:id 6))
          (:box
           (:type :value)
           (:reference cons)
           (:group-id nil)
           (:name "value box")
           (:x 28)
           (:y 266)
           (:w 89)
           (:h 36)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:reactive nil)
           (:inputs)
           (:outputs (:output (:name "value") (:reactive nil)))
           (:value (:list 300 600))
           (:id 7))
          (:box
           (:type :object)
           (:reference textbuffer)
           (:group-id nil)
           (:name nil)
           (:x 105)
           (:y 368)
           (:w 80)
           (:h 50)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:display :mini-view)
           (:showname nil)
           (:lock nil)
           (:lambda nil)
           (:reactive nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "SELF")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "CONTENTS")
             (:value nil)
             (:reactive nil)))
           (:outputs
            (:output (:name "SELF") (:reactive nil))
            (:output (:name "CONTENTS") (:reactive nil)))
           (:window (:size (500 500)) (:position (83 128)))
           (:edition-params)
           (:value
            (:object
             (:class textbuffer)
             (:slots ((:contents (:list "300" "900"))))
             (:add-slots ((:input-mode :lines-cols)))))
           (:id 8)))
         (:connections
          (:connection (:from (:box 0 :out 0)) (:to (:box 4 :in 1)))
          (:connection (:from (:box 2 :out 0)) (:to (:box 3 :in 1)))
          (:connection (:from (:box 3 :out 0)) (:to (:box 4 :in 0)))
          (:connection (:from (:box 4 :out 0)) (:to (:box 1 :in 0)))
          (:connection (:from (:box 5 :out 0)) (:to (:box 8 :in 1)))
          (:connection (:from (:box 6 :out 0)) (:to (:box 5 :in 1)))
          (:connection (:from (:box 7 :out 0)) (:to (:box 5 :in 0))))))
       (:group-id nil)
       (:name "perinv")
       (:x 141)
       (:y 173)
       (:w 114)
       (:h 28)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:display :hidden)
       (:pre-delay 0)
       (:lock nil)
       (:lambda :lambda)
       (:reactive nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "in")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "in")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 5))
      (:box
       (:type :function)
       (:reference reduce)
       (:group-id nil)
       (:name "reduce")
       (:x 192)
       (:y 283)
       (:w 88)
       (:h 36)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:reactive nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "FUNCTION")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "SEQUENCE")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 6))
      (:box
       (:type :function)
       (:reference append)
       (:group-id nil)
       (:name "append")
       (:x 150)
       (:y 249)
       (:w 92)
       (:h 36)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda :lambda)
       (:reactive nil)
       (:inputs
        (:input
         (:type :optional)
         (:name "lists")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :optional)
         (:name "lists")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 7))
      (:box
       (:type :function)
       (:reference om+)
       (:group-id nil)
       (:name "om+")
       (:x 331)
       (:y 74)
       (:w 71)
       (:h 36)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:reactive nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "ARG1")
         (:value 0)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "ARG2")
         (:value 1)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 8)))
     (:connections
      (:connection (:from (:box 0 :out 0)) (:to (:box 5 :in 0)))
      (:connection (:from (:box 2 :out 0)) (:to (:box 8 :in 0)))
      (:connection (:from (:box 3 :out 0)) (:to (:box 4 :in 1)))
      (:connection (:from (:box 4 :out 0)) (:to (:box 6 :in 1)))
      (:connection (:from (:box 5 :out 0)) (:to (:box 4 :in 0)))
      (:connection (:from (:box 6 :out 0)) (:to (:box 1 :in 0)))
      (:connection (:from (:box 7 :out 0)) (:to (:box 6 :in 0)))
      (:connection (:from (:box 8 :out 0)) (:to (:box 3 :in 0))))))
   (:group-id nil)
   (:name "addinversions")
   (:x 410)
   (:y 268)
   (:w 139)
   (:h 28)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :hidden)
   (:pre-delay 0)
   (:lock nil)
   (:lambda nil)
   (:reactive nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "in")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "in")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 16))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "value box")
   (:x 402)
   (:y 121)
   (:w 253)
   (:h 63)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:reactive nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value
    (:list
     (:list 300 600)
     (:list 300 700)
     (:list 400 700)
     (:list 400 800)
     (:list 5/4 3/2)
     (:list 6/5 3/2)))
   (:id 17))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "value box")
   (:x 491)
   (:y 392)
   (:w 32)
   (:h 36)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:reactive nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 2)
   (:id 18))
  (:box
   (:type :abstraction)
   (:reference
    (:patch
     (:name "randomtimbre")
     (:doc "")
     (:info
      (:created nil)
      (:modified nil)
      (:by *app-name*)
      (:version 0))
     (:window (:size (384 403)) (:position (83 128)))
     (:grid nil)
     (:lock nil)
     (:boxes
      (:box
       (:type :function)
       (:reference om-random)
       (:group-id nil)
       (:name "om-random")
       (:x 62)
       (:y 66)
       (:w 123)
       (:h 36)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock :eval-once)
       (:lambda nil)
       (:reactive nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "LOW")
         (:value 0)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "HIGH")
         (:value 1)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 0))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "value box")
       (:x 79)
       (:y 26)
       (:w 32)
       (:h 36)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:reactive nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 1)
       (:id 1))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "value box")
       (:x 136)
       (:y 27)
       (:w 32)
       (:h 36)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:reactive nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 3)
       (:id 2))
      (:box
       (:type :special)
       (:reference if)
       (:group-id nil)
       (:name "if")
       (:x 127)
       (:y 228)
       (:w 70)
       (:h 36)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:reactive nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "TEST")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "THEN")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :optional)
         (:name "else")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 3))
      (:box
       (:type :function)
       (:reference om=)
       (:group-id nil)
       (:name "om=")
       (:x 104)
       (:y 141)
       (:w 71)
       (:h 36)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:reactive nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "NUM1")
         (:value 0)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "NUM2")
         (:value 0)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 4))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "value box")
       (:x 139)
       (:y 102)
       (:w 32)
       (:h 36)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:reactive nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 2)
       (:id 5))
      (:box
       (:type :function)
       (:reference om-random)
       (:group-id nil)
       (:name "om-random")
       (:x 199)
       (:y 140)
       (:w 123)
       (:h 36)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:reactive nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "LOW")
         (:value 0)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "HIGH")
         (:value 1)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 6))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "value box")
       (:x 216)
       (:y 101)
       (:w 32)
       (:h 36)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:reactive nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 1)
       (:id 7))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "value box")
       (:x 273)
       (:y 102)
       (:w 32)
       (:h 36)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:reactive nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 4)
       (:id 8))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "value box")
       (:x 158)
       (:y 188)
       (:w 32)
       (:h 36)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:reactive nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 1)
       (:id 9))
      (:box
       (:type :io)
       (:reference
        (:out (:type omout) (:name "out") (:index 1) (:doc "")))
       (:group-id nil)
       (:name "out")
       (:x 39)
       (:y 269)
       (:w 45)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:reactive nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "out-value")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 10))
      (:box
       (:type :io)
       (:reference
        (:out (:type omout) (:name "out") (:index 2) (:doc "")))
       (:group-id nil)
       (:name "out")
       (:x 135)
       (:y 271)
       (:w 45)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:reactive nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "out-value")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 11)))
     (:connections
      (:connection (:from (:box 0 :out 0)) (:to (:box 4 :in 0)))
      (:connection
       (:from (:box 0 :out 0))
       (:to (:box 10 :in 0))
       (:attributes (:color nil :style nil :modif (0 -0.45))))
      (:connection (:from (:box 1 :out 0)) (:to (:box 0 :in 0)))
      (:connection (:from (:box 2 :out 0)) (:to (:box 0 :in 1)))
      (:connection (:from (:box 3 :out 0)) (:to (:box 11 :in 0)))
      (:connection (:from (:box 4 :out 0)) (:to (:box 3 :in 0)))
      (:connection (:from (:box 5 :out 0)) (:to (:box 4 :in 1)))
      (:connection
       (:from (:box 6 :out 0))
       (:to (:box 3 :in 1))
       (:attributes (:color nil :style nil :modif (0 -17/54))))
      (:connection (:from (:box 7 :out 0)) (:to (:box 6 :in 0)))
      (:connection (:from (:box 8 :out 0)) (:to (:box 6 :in 1)))
      (:connection
       (:from (:box 9 :out 0))
       (:to (:box 3 :in 2))
       (:attributes (:color nil :style nil :modif (0 23/70)))))))
   (:group-id nil)
   (:name "randomtimbre")
   (:x 467)
   (:y 348)
   (:w 150)
   (:h 33)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :hidden)
   (:pre-delay 0)
   (:lock nil)
   (:lambda nil)
   (:reactive nil)
   (:inputs)
   (:outputs
    (:output (:name "out") (:reactive nil))
    (:output (:name "out") (:reactive nil)))
   (:id 19))
  (:comment
   (:x 331)
   (:y 14)
   (:w 337)
   (:h 108)
   (:fgcolor nil)
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:text
    "Put the list of chords you want to train into the box below. Chords are given by the intervals from the bass note. You can use ratios or midicents to describe a chord, but don't mix the two in one chord.")
   (:id 20))
  (:comment
   (:x 174)
   (:y 140)
   (:w 214)
   (:h 48)
   (:fgcolor nil)
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:text "This RNG gives the pitch of the bass note in midicents.")
   (:id 21))
  (:comment
   (:x 462)
   (:y 185)
   (:w 204)
   (:h 48)
   (:fgcolor nil)
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:text "All inversions up to the number below are added.")
   (:id 22))
  (:comment
   (:x 669)
   (:y 251)
   (:w 327)
   (:h 68)
   (:fgcolor nil)
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:text
    "If you want to hear a specific interval, put it into the right box and connect it to the rightmost input of the \"interval\" box. ")
   (:id 23))
  (:comment
   (:x 602)
   (:y 398)
   (:w 317)
   (:h 108)
   (:fgcolor nil)
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:text
    "The first of these three input boxes chooses the instrument, the second the note length and the third the instrument timbre (only used by instrument 2).
")
   (:id 24))
  (:comment
   (:x 625)
   (:y 328)
   (:w 352)
   (:h 68)
   (:fgcolor nil)
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:text
    "To randomize the timbre, connect the first and second input of \"randomtimbre\" to the second and fourth input of the \"subchords\" box.")
   (:id 25))
  (:comment
   (:x 32)
   (:y 428)
   (:w 371)
   (:h 148)
   (:fgcolor nil)
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:text
    "The box below is a simple Csound orchestra file with three  different instruments: 1 a plucked string, 2 an oscilator, 3 a Wurlitzer electric piano emulator . The box to the right contains four wave forms for the oscilator: 1 sine waves,2 sawtooth waves, 3 cube waves, 4 pulse waves.
")
   (:id 26))
  (:comment
   (:x 130)
   (:y 367)
   (:w 262)
   (:h 48)
   (:fgcolor nil)
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:text
    "You can find out the chosen chord by checking the box to the right.")
   (:id 27))
  (:comment
   (:x 596)
   (:y 529)
   (:w 312)
   (:h 208)
   (:fgcolor nil)
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:text
    "As it is currently set, each evaluation sets the base of the interval anew. To fix it, select the om-random box and lock its evaluation by pressing b twice. To unlock it, press b again. Note that a box has to be evaluated at least once before it is locked again to obtain a different value, so if you want to switch between fixed interval bases, you have to press b, then v, then b.")
   (:id 28)))
 (:connections
  (:connection (:from (:box 1 :out 0)) (:to (:box 0 :in 0)))
  (:connection (:from (:box 2 :out 0)) (:to (:box 4 :in 1)))
  (:connection (:from (:box 3 :out 0)) (:to (:box 1 :in 1)))
  (:connection (:from (:box 4 :out 0)) (:to (:box 9 :in 0)))
  (:connection (:from (:box 5 :out 1)) (:to (:box 8 :in 0)))
  (:connection (:from (:box 6 :out 0)) (:to (:box 4 :in 0)))
  (:connection (:from (:box 7 :out 0)) (:to (:box 10 :in 0)))
  (:connection (:from (:box 8 :out 0)) (:to (:box 3 :in 2)))
  (:connection (:from (:box 9 :out 0)) (:to (:box 5 :in 1)))
  (:connection (:from (:box 11 :out 0)) (:to (:box 1 :in 0)))
  (:connection (:from (:box 12 :out 1)) (:to (:box 3 :in 1)))
  (:connection (:from (:box 13 :out 0)) (:to (:box 8 :in 2)))
  (:connection (:from (:box 14 :out 0)) (:to (:box 8 :in 3)))
  (:connection (:from (:box 15 :out 0)) (:to (:box 16 :in 1)))
  (:connection (:from (:box 16 :out 0)) (:to (:box 9 :in 1)))
  (:connection
   (:from (:box 17 :out 0))
   (:to (:box 16 :in 0))
   (:attributes (:color nil :style nil :modif (0 -0.45))))
  (:connection (:from (:box 18 :out 0)) (:to (:box 8 :in 1)))))